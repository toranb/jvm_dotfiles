set -sg escape-time 0
set -g prefix C-Space
set -g default-terminal "xterm"
source-file "${HOME}/.tmux/themes/default.tmux"

# -----------------------------------------------------------------------------
# Attempt to put an end to the iTerm tmux vim copy nonsense
# -----------------------------------------------------------------------------
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# -----------------------------------------------------------------------------
# Turn on window renumbering
# -----------------------------------------------------------------------------
set-option -g renumber-windows on

# -----------------------------------------------------------------------------
# Resize tmux panes with the mouse
# -----------------------------------------------------------------------------
set -g mouse-resize-pane on

# -----------------------------------------------------------------------------
# Turn on Vim mode for movement
# Also allows easy upwards searching
# -----------------------------------------------------------------------------
setw -g mode-keys vi

# -----------------------------------------------------------------------------
# Vim visual selection and yank when in copy mode
# -----------------------------------------------------------------------------
bind Space copy-mode
bind C-Space copy-mode
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind -t vi-copy 'C-v' rectangle-toggle

# -----------------------------------------------------------------------------
# After we have something yanked back in Vim we can paste our yanked selection
# anywhere we are in insert mode with (prefix p). This works in the vim buffer,
# search and fuzzy finder buffer for example
# -----------------------------------------------------------------------------
bind p paste-buffer

# -----------------------------------------------------------------------------
# Easier for my brain to remember to split the pane with - and \
# which resemble a horizontal and vertical split respectively
# doesn't override default (prefix ") and (prefix &)
# -----------------------------------------------------------------------------
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# -----------------------------------------------------------------------------
# Put Ctrl-l back as Ctrl-u
# Here is how to do this good luck finding a key
# -----------------------------------------------------------------------------
#bind -n C-u send-keys 'C-l'

# -----------------------------------------------------------------------------
# Manually renumber the tmux windows when pairs go rogue
# -----------------------------------------------------------------------------
unbind r
bind r run '~/jvm_dotfiles/tmux/mac_tmux/scripts/renumber.sh'

# -----------------------------------------------------------------------------
# Switch between tmux screen splits and Vim splits with the same keys!
# <C-h><C-j><C-k><C-l>
# -----------------------------------------------------------------------------
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"
